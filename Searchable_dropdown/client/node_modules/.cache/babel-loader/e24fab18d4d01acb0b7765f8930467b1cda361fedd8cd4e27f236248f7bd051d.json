{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\mini_projects\\\\Searchable_dropdown\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Select from \"react-select\";\nimport \"./app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const option = [{\n    value: \"india\",\n    label: \"india\"\n  }, {\n    value: \"bhutan\",\n    label: \"bhutan\"\n  }, {\n    value: \"china\",\n    label: \"china\"\n  }, {\n    value: \"paksitan\",\n    label: \"paksitan\"\n  }, {\n    value: \"erope\",\n    label: \"erope\"\n  }, {\n    value: \"england\",\n    label: \"england\"\n  }, {\n    value: \"srilanka\",\n    label: \"srilanka\"\n  }];\n  const [SelectOption, setSelectOption] = useState(null);\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const handleInputChange = inputValue => {\n    const filteredOptions = option.filter(option => option.label.toLowerCase().startsWith(inputValue.toLowerCase()));\n    setSelectOption(null); // Clear the selection\n    setSelectOption(filteredOptions);\n    setIsMenuOpen(inputValue.length > 0); // Open the menu if there's input\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Searchable Dropdown\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Select, {\n      options: option,\n      value: SelectOption,\n      onChange: setSelectOption,\n      onInputChange: handleInputChange,\n      menuIsOpen: isMenuOpen,\n      isSearchable: true,\n      placeholder: \"Enter Country Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"i1LSReQfLjtc7/RVhfPzfh55kCM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Select","jsxDEV","_jsxDEV","App","_s","option","value","label","SelectOption","setSelectOption","isMenuOpen","setIsMenuOpen","handleInputChange","inputValue","filteredOptions","filter","toLowerCase","startsWith","length","class","children","fileName","_jsxFileName","lineNumber","columnNumber","options","onChange","onInputChange","menuIsOpen","isSearchable","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Desktop/mini_projects/Searchable_dropdown/client/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Select from \"react-select\"\nimport \"./app.css\"\nconst App = () =>{\n  const option = [\n    {value:\"india\",label:\"india\"},\n    {value:\"bhutan\",label:\"bhutan\"},\n    {value:\"china\",label:\"china\"},\n    {value:\"paksitan\",label:\"paksitan\"},\n    {value:\"erope\",label:\"erope\"},\n    {value:\"england\",label:\"england\"},\n    {value:\"srilanka\",label:\"srilanka\"}\n\n    \n  ]\n  const [SelectOption,setSelectOption] = useState(null)\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  const handleInputChange = (inputValue) => {\n    const filteredOptions = option.filter(option =>\n      option.label.toLowerCase().startsWith(inputValue.toLowerCase())\n    );\n\n    setSelectOption(null); // Clear the selection\n    setSelectOption(filteredOptions);\n    setIsMenuOpen(inputValue.length > 0); // Open the menu if there's input\n  };\n\n  return (\n    <div class=\"App\">\n       <h1>Searchable Dropdown</h1>\n       <Select    \n         options={option}\n         value={SelectOption}\n         onChange={setSelectOption}\n         onInputChange={handleInputChange}\n         menuIsOpen={isMenuOpen}\n         isSearchable={true}\n         placeholder=\"Enter Country Name\"\n       ></Select> \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAClB,MAAMC,GAAG,GAAGA,CAAA,KAAK;EAAAC,EAAA;EACf,MAAMC,MAAM,GAAG,CACb;IAACC,KAAK,EAAC,OAAO;IAACC,KAAK,EAAC;EAAO,CAAC,EAC7B;IAACD,KAAK,EAAC,QAAQ;IAACC,KAAK,EAAC;EAAQ,CAAC,EAC/B;IAACD,KAAK,EAAC,OAAO;IAACC,KAAK,EAAC;EAAO,CAAC,EAC7B;IAACD,KAAK,EAAC,UAAU;IAACC,KAAK,EAAC;EAAU,CAAC,EACnC;IAACD,KAAK,EAAC,OAAO;IAACC,KAAK,EAAC;EAAO,CAAC,EAC7B;IAACD,KAAK,EAAC,SAAS;IAACC,KAAK,EAAC;EAAS,CAAC,EACjC;IAACD,KAAK,EAAC,UAAU;IAACC,KAAK,EAAC;EAAU,CAAC,CAGpC;EACD,MAAM,CAACC,YAAY,EAACC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACrD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMa,iBAAiB,GAAIC,UAAU,IAAK;IACxC,MAAMC,eAAe,GAAGT,MAAM,CAACU,MAAM,CAACV,MAAM,IAC1CA,MAAM,CAACE,KAAK,CAACS,WAAW,CAAC,CAAC,CAACC,UAAU,CAACJ,UAAU,CAACG,WAAW,CAAC,CAAC,CAChE,CAAC;IAEDP,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;IACvBA,eAAe,CAACK,eAAe,CAAC;IAChCH,aAAa,CAACE,UAAU,CAACK,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;EACxC,CAAC;;EAED,oBACEhB,OAAA;IAAKiB,KAAK,EAAC,KAAK;IAAAC,QAAA,gBACblB,OAAA;MAAAkB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BtB,OAAA,CAACF,MAAM;MACLyB,OAAO,EAAEpB,MAAO;MAChBC,KAAK,EAAEE,YAAa;MACpBkB,QAAQ,EAAEjB,eAAgB;MAC1BkB,aAAa,EAAEf,iBAAkB;MACjCgB,UAAU,EAAElB,UAAW;MACvBmB,YAAY,EAAE,IAAK;MACnBC,WAAW,EAAC;IAAoB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAAApB,EAAA,CAvCKD,GAAG;AAAA4B,EAAA,GAAH5B,GAAG;AAyCT,eAAeA,GAAG;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}